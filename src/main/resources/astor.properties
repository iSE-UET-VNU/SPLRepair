#Project identifier (optional)
projectIdentifier=
#mode:
mode=jgenprog
#Dir for the output from Mutation and evolution
workingDirectory=./output_astor/
#Java compliance Level
javacompliancelevel=8
alternativecompliancelevel=8
projectinfocommand=com.github.tdurieux:project-config-maven-plugin:info
#
regressionforfaultlocalization=true
#
#Evolutionary Parameters
#
#Package that gZoltar instruments, that means, It only considers suspicious statements from classes included in that package.
packageToInstrument=
#Max number of generation executed
maxGeneration=5
# Size of the population (number of variants for generation )
population=1
#Mechanism to validate a program variant i.e., execute the test cases. It can be 1) process (Astor launches a process for the test)|2)thread (Astor launches a thread for the test) |3) local (Astor executes the test in the current thread)
validation=process
#applyCrossover
applyCrossover=true
#Execute regression
forceExecuteRegression=false
#Fault localization threshold.  
flthreshold=0.1
#
#Max number of suspicious analyzed 
maxsuspcandidates=1000
#Max Number of modification points
maxmodificationpoints=1000
#
includeZeros=false
##PopulationConformation
reintroduce=PARENTS:ORIGINAL
###
overridemaxtime=true
##
maxtimefactor=10
#Time for evaluation the failing test cases (in milliseconds):
tmax1=10000
#Time for evaluation the test suite i.e., regression testing (in milliseconds):
tmax2=600000
#
stopfirst=false
#
maxnumbersolutions=1000000
#
allpoints=false
#
savesolution=true
#
saveall=false
#
multipointmodification=false
#
maxtime=60
#
testbystep=false
#
scope=package
#
resetoperations=false
#inorder, random, weight,sequence
modificationpointnavigation=weight
#
mutationrate=1 
#
probagenmutation=false
#
uniqueoptogen=false
#
srcjavafolder=src
srctestfolder=test/main
#
binjavafolder=/build/main
bintestfolder=/build/test
#
resourcesfolder=/src/main/resources:/src/test/resources:
#
# Gzoltar configuration
## working directory for Gzoltar 
location=/tmp
#Faul localization class
faultlocalization=fr.inria.astor.core.faultlocalization.flacoco.FlacocoFaultLocalization
#
fitnessfunction=fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction

#
populationcontroller=fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
#
compiler=fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
#Evosuite jar
evosuitejar=./lib/evosuite-master-1.0.6-SNAPSHOT.jar
#evosuitejar=./lib/evosuite-1.0.6.jar
evosuitestandaloneruntimejar = ./lib/evosuite-standalone-runtime-1.0.6.jar
hamcrestjar = ./lib/hamcrest-core-1.3.jar
#./lib/evosuite-1.0.3.jar
evosuiteresultfolder=evosuite

###Properties for automatic execution of 
bugId=280
numberExecutions=1
###Properties for mutation testing
elementsToMutate=10
###test cases to Ignore (separated using File.pathSeparator (': in Unix/Linux/Solaris), please, replace it by ';' if you use Windows)
ignoredTestCases=
###org.apache.commons.math.ode.nonstiff:org.apache.commons.math.ode2.nonstiff:org.apache.commons.lang.LocaleUtilsTest
###prefix of program variant folder name
pvariantfoldername=variant-

##CONFIGURATION FILE#
#Folders with version of programs:
version-location=./math-version/
#Maven Repo location
pathToMVNRepository=
#Trunk Process command: print the first 'commandTrunk'. Put 0 to not trunk the command
commandTrunk=50000
#Use fault localization to reduce the number or suspicious, or all statement are uniformly suspicious
skipfaultlocalization=false
ignoreflakyinfl=false
#EvoSuite in seconds
evosuitetimeout=120
#
evo_buggy_class=true
#
evo_affected_by_op=true
#Default Version of jUnit used as default by astor.
lastJUnitVersion=./examples/libs/junit-4.11.jar
#Apply DSE to evosuite
evoDSE=false
#True ES is computed over the original (i.e., not modified) class or over the patched
evoRunOnBuggyClass=true
#
learningdir=
#
clusteringfilename=clustering.csv
#
transformingredient=false
#
duplicateingredientsinspace=false
#Timezone
timezone=America/Los_Angeles
#Filter FL
filterfaultlocalization=true
#
manipulatesuper=false
#
maxVarCombination=1000
#
maxCombinationVariableLimit=false
#
skipfitnessinitialpopulation=true
#
processoutputinfile=false
#"JUnitNologExternalExecutor"/* "JUnitExternalExecutor" */
#testexecutorclass=JUnitNologExternalExecutor
logtestexecution=true
#
nomodificationconvergence=100
#
cleantemplates=true
#
limitbysuspicious=true
#
jsonoutputname=astor_output
#
probabilistictransformation=true
#
logsattemps=true
#
maxnumvariablesperingredient=10
#
preservelinenumbers=true
#After build a model, Spoon can save the source and bin on disk
savespoonmodelondisk=false
#
gzoltartestpackagetoexclude=junit.framework
#
gzoltarpackagetonotinstrument=junit.framework
#
executorjar=./lib/jtestex7.jar
#
runjava7code=false
#
nrPlaceholders=1
#
savecompletepatched=true
#
resetmodel=true
#
parsesourcefromoriginal=true
#
max_synthesis_step=10000
#
synthesis_depth=3
#
forcesubprocesskilling=false
#
collectonlyusedmethod=false
#default|git|relative
diff_type=relative
#
metid=0
#
outputjsonresult=true
#
continuewhenmodelfail=true
#
diffcontext=0
#
antipattern=false
#
keepcomments=true
#
folderDiff=./diffSolutions
#
nolog=False

##new properties
#skip the validation process to obtained all the possible generated patches
skipvalidation=false
#read the fault localization results from files
readfaultlocalizationresultsfromfile = true
#SBFL metric could be one of the following: JACCARD, SORENSEN_DICE, TARANTULA, OCHIAI, OP2, BARINEL,
# DSTAR, ROGERS_TANIMOTO, AMPLE, SIMPLE_MATCHING, RUSSELL_RAO, COHEN, SCOTT, ROGOT1, GEOMETRIC_MEAN,
#  M2, WONG1, SOKAL, DICE, HUMANN, OVERLAP, ZOLTAR, WONG3, WONG2, M1, ROGOT2, EUCLID, HAMMING, FLEISS,
#  ANDERBERG, KULCZYNSKI1, KULCZYNSKI2, HARMONIC_MEAN, GOODMAN
defaultSBFLmetrics = Tarantula
system_type = "spl"

###SPL properties
#faultLocalizationResultFileName = varcop_fl_results.txt
faultLocalizationResultFileName = groundtruth_fault_position.txt
featureVariantMappingFile = feature_variant_mapping.txt
executeEvosuiteGeneratedTestCases = True
desactivateingredientcache = True
maxGenerationSPL = 30
canhavezerosusp = true
splfitnessfunction=SPLTestCaseFitnessFunction
splpopulationcontroller=SPLTestCaseBasedFitnessPopulationController
SPLmaxinstance = 1